{
  "openapi": "3.0.3",
  "info": {
    "title": "Swagger Contacts API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://contactsdb-4y00.onrender.com/api"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authentification API's"
    },
    {
      "name": "Users"
    },
    {
      "name": "Contacts"
    },
    {
      "name": "Recipes"
    }
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "Adds a new user",
        "operationId": "registerNewUser",
        "requestBody": {
          "description": "Create a new User in the store",
          "$ref": "#/components/requestBodies/Auth",
          "required": true
        },
        "responses": {
          "201": {
            "description": "Please verify your email",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignUpResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SignUpResponse"
                }
              },
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/components/schemas/SignUpResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "409": {
            "description": "Email in use"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Log In to the system",
        "operationId": "logInUser",
        "requestBody": {
          "description": "Log In to the system",
          "$ref": "#/components/requestBodies/Auth",
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogInResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LogInResponse"
                }
              },
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/components/schemas/LogInResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized. Email or password is wrong"
          }
        }
      }
    },
    "/add": {
      "post": {
        "tags": ["Recipes"],
        "summary": "Create new recipe",
        "operationId": "createNewRecipe",
        "requestBody": {
          "description": "Create new recipe",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Recipe"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Recipe"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/MissedRequiredFields"
          },
          "401": {
            "$ref": "#/components/responses/NotAuthorizedError"
          }
        }
      }
    },
    "/users": {
      "patch": {
        "tags": ["Users"],
        "summary": "Update user subscription",
        "operationId": "updateUserSubscription",
        "requestBody": {
          "description": "Update subscription",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "subscription": {
                    "type": "string",
                    "example": "starter"
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "object",
                "properties": {
                  "subscription": {
                    "type": "string",
                    "example": "starter"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignUpResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SignUpResponse"
                }
              },
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/components/schemas/SignUpResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/NotAuthorizedError"
          }
        },
        "security": [
          {
            "jwtAuth": []
          }
        ]
      }
    },
    "/users/current": {
      "get": {
        "tags": ["Users"],
        "summary": "Returns a current user",
        "operationId": "getCurrentUser",
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/NotAuthorizedError"
          }
        },
        "security": [
          {
            "jwtAuth": []
          }
        ]
      }
    },
    "/users/logout": {
      "post": {
        "tags": ["Users"],
        "summary": "Logs out current logged in user session",
        "description": "",
        "operationId": "logoutUser",
        "parameters": [],
        "responses": {
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "jwtAuth": []
          }
        ]
      }
    },
    "/users/avatar": {
      "patch": {
        "tags": ["Users"],
        "summary": "Update user avatar",
        "operationId": "updateUserAvatar",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Avatar updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "avatarUrl": {
                      "type": "string",
                      "example": "public/avatars/63fdff3a26519186b34fdd81.wmark-kievrealty"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to update avatar"
          },
          "401": {
            "$ref": "#/components/responses/NotAuthorizedError"
          },
          "404": {
            "description": "Can't update avatar"
          }
        },
        "security": [
          {
            "jwtAuth": []
          }
        ]
      }
    },
    "/users/{verificationToken}": {
      "get": {
        "tags": ["Users"],
        "summary": "Verificate user by email",
        "operationId": "verificateUser",
        "description": "",
        "parameters": [
          {
            "name": "verificationToken",
            "in": "path",
            "description": "Verification comes from the link after click",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Verification successful"
          },
          "400": {
            "description": "Verification has already been passed"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/verify": {
      "post": {
        "tags": ["Users"],
        "summary": "Resend verification token in case user wasn't verificated",
        "description": "Resend verification email",
        "operationId": "resendVerificationEmail",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "example@gmail.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Verification email sent"
          },
          "400": {
            "description": "Verification has already been passed"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "jwtAuth": []
          }
        ]
      }
    },
    "/contacts": {
      "get": {
        "tags": ["Contacts"],
        "description": "Return an array of contacts that belongs to current user",
        "summary": "Get all contacts",
        "operationId": "getAllContacts",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "paging result",
            "schema": {
              "type": "string",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Define page size",
            "schema": {
              "type": "string",
              "default": 20
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "define sort direction",
            "schema": {
              "type": "string",
              "enum": ["desc", "asc"],
              "default": "desc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "contacts": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Contact"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/NotAuthorizedError"
          }
        },
        "security": [
          {
            "jwtAuth": []
          }
        ]
      },
      "post": {
        "tags": ["Contacts"],
        "description": "Add new Contact",
        "summary": "Create new Contact",
        "operationId": "addContact",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Contact"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/MissedRequiredFields"
          },
          "401": {
            "$ref": "#/components/responses/NotAuthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/ContactNotFoundError"
          }
        },
        "security": [
          {
            "jwtAuth": []
          }
        ]
      }
    },
    "/contacts/{id}": {
      "get": {
        "tags": ["Contacts"],
        "description": "Get all contact by id",
        "summary": "Return contact with looked id",
        "operationId": "getContactById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "set a contact id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/MissedRequiredFields"
          },
          "401": {
            "$ref": "#/components/responses/NotAuthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/ContactNotFoundError"
          }
        },
        "security": [
          {
            "jwtAuth": []
          }
        ]
      },
      "put": {
        "tags": ["Contacts"],
        "description": "Update contact by id",
        "summary": "Update contact by id",
        "operationId": "updateContactById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "set a contact id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/MissedRequiredFields"
          },
          "401": {
            "$ref": "#/components/responses/NotAuthorizedError"
          },
          "403": {
            "description": "You can't update contact that doesn't belong to your account",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "example": "You can't update contact that doesn't belong to your account"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ContactNotFoundError"
          }
        },
        "security": [
          {
            "jwtAuth": []
          }
        ]
      },
      "delete": {
        "tags": ["Contacts"],
        "description": "Delete contact",
        "summary": "Delete contact by id",
        "operationId": "deleteContactById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "set a contact id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "63f7760db181945038e8e87"
                    },
                    "message": {
                      "type": "string",
                      "example": "Contact deleted"
                    },
                    "status": {
                      "type": "integer",
                      "example": 204
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/MissedRequiredFields"
          },
          "401": {
            "$ref": "#/components/responses/NotAuthorizedError"
          },
          "403": {
            "description": "You can't delete contact that douesn't belong to your account",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "example": "You can't update contact that doesn't belong to your account"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ContactNotFoundError"
          }
        },
        "security": [
          {
            "jwtAuth": []
          }
        ]
      }
    },
    "/contacts/{id}/favorite": {
      "patch": {
        "tags": ["Contacts"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "set a contact id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "favorite": {
                    "type": "boolean",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/MissedRequiredFields"
          },
          "401": {
            "$ref": "#/components/responses/NotAuthorizedError"
          },
          "403": {
            "description": "You can't update contact that doesn't belong to your account",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "example": "You can't update contact that doesn't belong to your account"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ContactNotFoundError"
          }
        },
        "security": [
          {
            "jwtAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AuthRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "example@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "MyPassword1"
          }
        },
        "xml": {
          "name": "auth"
        }
      },
      "SignUpResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "example": "example@gmail.com"
              },
              "subscription": {
                "type": "string",
                "example": "starter"
              }
            }
          }
        },
        "xml": {
          "name": "signup"
        }
      },
      "LogInResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "example": "example@gmail.com"
              },
              "subscription": {
                "type": "string",
                "enum": ["starter", "pro", "business"],
                "example": "starter"
              }
            }
          },
          "token": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": 1231230985345
          },
          "email": {
            "type": "string",
            "example": "example@gmail.com"
          },
          "subscription": {
            "type": "string",
            "example": "starter"
          },
          "avatarUrl": {
            "type": "string",
            "example": "public/avatars/63fdff3a26519186b34fdd81.wmark-kievrealty"
          },
          "verify": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "Recipe": {
        "type": "object",
        "required": [
          "recipeTitle",
          "description",
          "category",
          "cookingTime",
          "ingredients",
          "preparation",
          "image"
        ],
        "properties": {
          "recipeTitle": {
            "type": "string",
            "example": "Macaroon"
          },
          "description": {
            "type": "string",
            "example": "it's an awesome cookies"
          },
          "category": {
            "type": "string",
            "example": "dessert"
          },
          "cookingTime": {
            "type": "string",
            "default": "2 hours"
          },
          "ingredients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ingredient"
            }
          },
          "preparation": {
            "type": "string",
            "default": "beat eggs until smooth"
          },
          "image": {
            "type": "string",
            "format": "binary",
            "example": "public/recipes/63fdff3a26519186b34fdd81.wmark-kievrealty"
          }
        }
      },
      "Categories": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Category"
        }
      },
      "Category": {
        "type": "string",
        "enum": [
          "Beef",
          "Breakfast",
          "Dessert",
          "Goat",
          "Lamb",
          "Miscellaneous",
          "Vegan",
          "Chicken",
          "Pasta",
          "Pork",
          "SeaFood",
          "Side"
        ]
      },
      "Ingredient": {
        "type": "object",
        "required": ["name", "counts"],
        "properties": {
          "name": {
            "type": "string",
            "example": "eggs"
          },
          "counts": {
            "type": "string",
            "default": "2 tbs"
          }
        }
      },
      "Contact": {
        "type": "object",
        "required": ["name", "phone"],
        "properties": {
          "name": {
            "type": "string",
            "example": "Jhon Murphy"
          },
          "phone": {
            "type": "string",
            "example": "+380991234567"
          },
          "email": {
            "type": "string",
            "example": "example@gamil.com"
          },
          "favorite": {
            "type": "boolean",
            "default": false
          },
          "owner": {
            "type": "string",
            "example": "63fdff3a26519186b34fdd81"
          }
        },
        "xml": {
          "name": "user"
        }
      }
    },
    "responses": {
      "ContactNotFoundError": {
        "description": "Contact not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Contact not found!"
                }
              }
            }
          }
        }
      },
      "MissedRequiredFields": {
        "description": "Missed required fields",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Missed required fields"
                }
              }
            }
          }
        }
      },
      "NotAuthorizedError": {
        "description": "Is not authorized",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Missed required fields"
                }
              }
            }
          }
        }
      },
      "UnauthorizedError": {
        "description": "Access token is missing or invalid"
      }
    },
    "requestBodies": {
      "Auth": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AuthRequest"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/AuthRequest"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "jwtAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "jwtAuth": []
    }
  ]
}
